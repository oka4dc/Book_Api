version: "3.0"

services:
  Frondenddb:
    image: postgres:15

    environment:
      POSTGRES_USER: postgres
      POSTGRES_DB: bookly
      POSTGRES_PASSWORD: testpass

    ports:
     - "5432:5432"

    volumes:
      - db-data:/var/lib/postgresql/data

    networks:
      - app-network
  redis:
    image: redis:6

    ports:
     - "6379:6379"

    networks:
     - app-network

  Frontend:
    build: Frontend_users_API/.
    volumes:
      - .:/app
    environment: 
      DATABASE_URL: ${DATABASE_URL}
      JWT_SECRET: ${JWT_SECRET}
      JWT_ALGORITHM: ${JWT_ALGORITHM}
      MAIL_USERNAME: ${MAIL_USERNAME}
      MAIL_PASSWORD: ${MAIL_PASSWORD}
      MAIL_SERVER: ${MAIL_SERVER}
      MAIL_PORT: ${MAIL_PORT}
      MAIL_FROM: ${MAIL_FROM}
      MAIL_FROM_NAME: ${MAIL_FROM_NAME}
      DOMAIN: ${DOMAIN}
      REDIS_URL: ${REDIS_URL}

    ports:
      - "8000:8000"

    depends_on:
      - Frontenddb
      - redis

    networks:
      - app-network

  Backenddb:
    image: postgres:13
    env_file:
      - .env
    volumes:
      - postgres_data:/var/lib/postgresql/data

  Admin:
    build: Backend_Admin_API/Admin_project/.
    command: gunicorn core.wsgi:application --bind 0.0.0.0:8000
    volumes:
      - .:/usr/src/app
    ports:
      - "8001:8001"
    env_file:
      - .env
    depends_on:
      - Backenddbdb

  nginx:
    image: nginx:latest
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    ports:
      - "80:80"
    depends_on:
      - Admin


  celery:
    build: .

    command: celery -A src.celery_tasks.c_app worker --loglevel=INFO

    volumes:
      - .:/app

    depends_on:
      - redis

    environment:
      REDIS_URL: ${REDIS_URL}

    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data: